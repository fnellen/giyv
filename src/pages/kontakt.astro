---
import { l, t } from "astro-i18n";
import Container from "../components/shared/Container.astro";
import type SEOProps from "../interfaces/seoProps";
import BaseLayout from "../layouts/BaseLayout.astro";
import Paragraph from "../components/shared/Paragraph.astro";

const seo: SEOProps = {
  title: t("contact.title"),
  description: t("contact.description"),
  image: "/images/og-image.png",
  noindex: false,
  nofollow: false,
  ogBasic: {
    title: t("contact.title"),
    image: "/images/og-image.png",
    type: "website",
    url: l("/kontakt"),
  },
  ogOptional: {
    audio: undefined,
    description: undefined,
    determiner: undefined,
    locale: undefined,
    localeAlternate: undefined,
    siteName: undefined,
    video: undefined,
  },
  ogArticle: {
    publishedTime: undefined,
    modifiedTime: undefined,
    expirationTime: undefined,
    author: undefined,
    section: undefined,
    tags: undefined,
  },
  twitter: {
    card: "summary_large_image",
    site: "www.giyv.eu",
    creator: "@giyv_eu",
    title: t("contact.title"),
    image: "/images/og-image.png",
    description: t("contact.description"),
  },
};

const submitUrl = import.meta.env.STRAPI_URL + "/api/ezforms/submit/";
const recaptchatoken = import.meta.env.RECAPTCHA_SECRET;
const success = t("contact.success");
const error = t("contact.error");
---

<BaseLayout seo={seo}>
  <Container className="grid grid-col cols-1 gap-4 mt-12">
    <h1
      class="text-3xl/tight sm:text-4xl/tight md:text-5xl/tight xl:text-6xl/tight
             font-bold text-heading-1"
    >
      { t("contact.title") }
    </h1>
    <Paragraph>
      { t("contact.description") }
    </Paragraph>
    <script
      define:vars={{ recaptchatoken }}
      src=`https://www.google.com/recaptcha/api.js?render=${recaptchatoken}`
    ></script>
    <form name="contact" method="POST" class="grid grid-col cols-1 gap-4 w-full">
      <label class="flex flex-col">
        <span class="text-heading-2 font-bold">{t("contact.form.name")}</span>
        <input
          type="text"
          name="name"
          class="border border-gray-300 rounded-md p-2"
        />
      </label>
      <label class="flex flex-col">
        <span class="text-heading-2 font-bold">{t("contact.form.email")}</span>
        <input
          type="email"
          name="email"
          class="border border-gray-300 rounded-md p-2"
        />
      </label>
      <label class="flex flex-col">
        <span class="text-heading-2 font-bold">{t("contact.form.message")}</span>
        <textarea name="message" class="border border-gray-300 rounded-md p-2"
        ></textarea>
      </label>
      <button
        class="g-recaptcha bg-primary text-white rounded-md p-2"
        data-sitekey="reCAPTCHA_site_key"
        data-callback="onSubmit"
        data-action="submit">{t("contact.form.submit")}</button
      >
    </form>
    <div id="success"></div>
    <div id="error"></div>

    <script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"
    ></script>

    <script define:vars={{ submitUrl, recaptchatoken, success, error }}>
      const form = document.querySelector("form");
      if (form) {
        form.addEventListener("submit", (e) => {
          e.preventDefault();
          grecaptcha.ready(function () {
            grecaptcha
              .execute(recaptchatoken, { action: "submit" })
              .then(function (token) {
                const formData = new FormData(form);
                axios
                  .post(submitUrl, {
                    token,
                    formData: Object.fromEntries(formData),
                  })
                  .then((res) => {
                    console.log(res);
                    if (res.status === 200) {
                      document.getElementById("success").innerHTML = success;
                    } else {
                      document.getElementById("error").innerHTML = error;
                    }
                  })
                  .catch(() => {
                    document.getElementById("error").innerHTML = error;
                  });
              });
          });
        });
      }
    </script>
  </Container>
</BaseLayout>
